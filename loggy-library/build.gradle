apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.protobuf'
apply plugin: "com.vanniktech.maven.publish"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("String", "loggyUrl", "\"http://78.46.17.17:50111\"")
        buildConfigField("int", "logPriority", "android.util.Log.VERBOSE")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        localhost {
            initWith debug
            buildConfigField("String", "loggyUrl", "\"http://10.0.2.2:50111\"")
            buildConfigField("int", "logPriority", "android.util.Log.VERBOSE")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding = true
    }

    sourceSets["main"].java.srcDir("src/main/kotlin")
    sourceSets["test"].java.srcDir("src/test/kotlin")
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.12.2' }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.31.1' // CURRENT_GRPC_VERSION
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:0.1.5"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc { // Options added to --grpc_out
                    option 'lite'
                }
                grpckt { // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"

    //logging
    implementation "com.jakewharton.timber:timber:4.7.1"


    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation 'io.grpc:grpc-android:1.31.1'
    runtimeOnly 'io.grpc:grpc-okhttp:1.31.1'
    implementation 'io.grpc:grpc-protobuf-lite:1.31.1'
    implementation "io.grpc:grpc-stub:1.31.1"
    implementation("io.grpc:grpc-kotlin-stub:0.1.5") {
        exclude group: "io.grpc"
        exclude group: "grpc-protobuf"
    }

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'com.google.truth:truth:1.1'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

mavenPublish {
    targets {
        // Modify the existing uploadArchives task
        uploadArchives {
            releaseRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            snapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            repositoryUsername = hasProperty('SONATYPE_LOGGY_USERNAME') ? SONATYPE_LOGGY_USERNAME : ""
            repositoryPassword = hasProperty('SONATYPE_LOGGY_PASSWORD') ? SONATYPE_LOGGY_PASSWORD : ""
        }
    }
}
